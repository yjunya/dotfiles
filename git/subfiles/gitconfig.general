[core]
    ignorecase = false
    editor = nvim

[alias]
    d = "diff"
    du = "!git ls-files --others --exclude-standard | xargs bat"
    p = "push"
    push-f = "push --force-with-lease"
    pu = "push -u origin HEAD"
    f = "fetch"
    m = "merge"
    fm = "!f() { git fetch origin $1; git merge origin/$1; };f"
    fmm = "!f() { git fetch origin master; git merge origin/master; };f"
    cm = "commit"
    cmm = "commit -m"
    cme = "commit --allow-empty -m"
    s = "status"
    st = "status"
    sw = "switch"
    swc = "switch -c"
    difff = "diff --word-diff"
    co = "checkout"
    adda = "add -A"
    tree = "log --graph --all --format=\"%x09%C(cyan bold)%an%Creset%x09%C(yellow)%h%Creset %C(magenta reverse)%d%Creset %s\""
    graph = "log --graph --all --format=\"%x09%C(cyan bold)%an%Creset%x09%C(yellow)%h%Creset %C(magenta reverse)%d%Creset %s\""
    g = "log --graph --all --format=\"%x09%C(cyan bold)%an%Creset%x09%C(yellow)%h%Creset %C(magenta reverse)%d%Creset %s\""
    ll = "log --oneline -n 10"
    lll = "log --oneline"
    lp = "log -p --ext-diff"
    current-branch-name = "branch --show-current"
    pull-f = "!git fetch && git reset --hard origin/$(git current-branch-name)"
    fix-commit = "!f () { git rebase -i HEAD~$1;};f"
    sta = "stash --include-untracked"
    stas = "!f () { git stash save $1 --include-untracked;};f"
    staa = "stash apply"
    stad = "stash drop"
    stap = "stash pop"
    pr = "!f(){ gh pr view --web 2>/dev/null || gh pr create --web; };f"
    browse = "!f(){ gh browse; };f"
    clean-branch = "!for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -d $branch; done"
    clean-branch-force = "!for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done"

[pull]
    rebase = false

[init]
    defaultBranch = "main"

[commit]
    template = ~/.config/git/commit_template.md

[diff]
    external = difft
